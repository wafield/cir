#document-categories,
#document-pane {
	font-size: 1.3rem;
}
#document-pane {
    margin-bottom: 4em;
}
.noselect {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
.tk {
	text-decoration: none;
	-moz-transition: background-color 0.2s;
	-webkit-transition: background-color 0.2s;
	-o-transition: background-color 0.2s;
	transition: background-color 0.2s;
}
.tk.n,
.tk.p,
.tk.q,
.tk.c,
.tk.t {
	cursor: pointer;
}
.tk.n {
	background-color: #FBBD08;
}
.tk.p {
	background-color: rgba(224, 123, 83, 0.2);
}
.tk.q {
	background-color: rgba(217, 92, 92, 0.5);
}
.tk.c {
	background-color: rgba(113, 217, 255, 0.5);
}
.tk.t {
	background-color: rgba(172, 235, 117, 0.8);
}
.tk.highlighted { /* must be put after p, q and c */
	background-color: #f2c61f;
}
#doc-highlight-toolbar,
#doc-thread-popup {
	position: absolute;
	left: -999999px;
	top: -999999px;
	z-index: 900;
}
#doc-highlight-toolbar .labeled.menu,
#doc-thread-popup .labeled.menu {
    padding: 0;
}
.section-content {
	line-height: 1.6em;
}
.section-content img {
	max-width: 100%;
}
.fixed.ui-dialog {
	position: fixed!important;
	z-index: 900;
}
.comment.form textarea {
	min-height: inherit;
	height: inherit;
}
#doc-thread-popup .segment {
	min-width: 450px;
}
#doc-thread-content {
	max-height: 500px;
	overflow: auto;
}

#document-rail {
	position: fixed;
	top: 3em;
	bottom: 1em;
	right: 0;
	overflow: auto;
	padding: 1em 0 0 0 ;
}
#available-tags {
	margin-top: 2em;
}
#available-tags .ui.toggle.button {
	margin-bottom: 0.75em;
}

#qa-wrapper .new.question.segment {
	width: 100%;
	left: 1px;
}

#qa-list .question.item {
	border: 10px solid aliceblue;
	background-color: #fff;
	padding: 0;
}
#qa-list .question.item.need-refresh {
	padding-top: 0;
}
#qa-list .question.item .refresh.prompt {
	display: none;
	margin-bottom: 0;
}
#qa-list .question.item.need-refresh .refresh.prompt {
	display: block;
}
#qa-list .question.item.need-refresh .expand-thread {
	color: #DB2828;
}
#qa-list .question.item .header {
	font-weight: inherit;
	font-size: 1.3rem;
	line-height: 1.6em;
	padding: 0.2em 0.5em;
	border-bottom: 1px solid #e1e2e3;
}
#qa-list .description {
	background: #f3f4f5;
	font-size: 1rem;
	line-height: 2em;
	padding: 0.2em 0.5em;
}
#qa-list .description .horizontal.list {
	display: block;
}
#qa-list .question.item .content {
	width: 100%;
	border: 1px solid;
}
#qa-thread {
	margin: 0;
	padding: 1em 0.5em;
}

#qa-refresh-prompter {
	margin-bottom: 0;
}
#qa-refresh-prompter:after {
	position: absolute;
	content: '';
	top: 100%;
	left: 25%;
	-webkit-transform: translateX(-50%) translateY(-50%) rotate(45deg);
	-ms-transform: translateX(-50%) translateY(-50%) rotate(45deg);
	transform: translateX(-50%) translateY(-50%) rotate(45deg);
	background-color: #F8FFFF;
	margin: .5px 0 0;
	width: .57142857em;
	height: .57142857em;
	border: none;
	border-bottom: 1px solid #A9D5DE;
	border-right: 1px solid #A9D5DE;
	z-index: 2;
}

#workbench2-document-viewlog {
	position: fixed;
	width: 10px;
    right: 50px;
    top: 11em;
}
#workbench2-document-nuggetmap {
	position: fixed;
	width: 30px;
    right: 60px;
    top: 11em;
}

#workbench2-nugget-container {
	top: 10em;
    overflow: auto;
    position: fixed;
    right: 900px;
    width: 500px;
}

a.morelink {
    text-decoration:none;
    outline: none;
}
.morecontent span {
    display: none;
}

.ui.card {
	width: 100%;
}

#nugget-operations-red, #nugget-operations-green {
  position: fixed;
  z-index: 99999;
  display: none;
  padding: 8px;
  padding-bottom: 2px;
  margin: 0;
}
 
#workbench2-claim-textarea-container, #workbench2-document-container, #workbench2-nugget-container {
	padding: 0.5em;
}

#workbench2-claim-container {
	padding: 0;
}

#workbench2-claim-textarea-container {
/*	top: 50%;
	height: 210px;
    overflow: auto;
    position: fixed;
    right: 0;*/
}

#workbench2-claim-container {
/*	top: calc(50% - -210px);
	bottom: 3em;
    overflow: auto;
    position: fixed;
    right: 0;
	padding-left: 2em;*/
}

.ui.card.workbench-claim-item {
	background-color: #e5f5f9;
}

/*customized shadow*/
.shadow1{
	box-shadow: 10px 0 1em rgba(0, 0, 0, 0.3);
    z-index: 20;
}



/*image-slider*/

#slider	{ 
    position:relative;
    margin:0;
    padding:0;
    list-style-type:none;
    width: 100%;
    height: auto;
    overflow:hidden; 
}
#slider li { 
    position:absolute;        
}
#slider img {
    width: 100%;
    height: auto;    
}
#slider p { 
    position:absolute;
    bottom:0;
    padding:20px;
    color:#ffffff;
    background-color: Gray  ;
    opacity: 0.6;
    margin:0;
    left:0;
    right:0; 
}

/*sidebox for questions*/

#question_sidebox_container {
  	z-index:31;
    position:fixed;
	right:-500px;  
	top:8em;
	bottom: 8em;
	width:500px;
	background:white;
	display: block;
	box-shadow: 0 0 1em rgba(0, 0, 0, 0.3);
}

#question_sidebox_tab {
	z-index:30;
	position:fixed;
	background:#356AA0;
	text-align: center;
	line-height: 30px;
	border-top-left-radius: 5px;
	border-top-right-radius:5px;
	font-family:"lucida grande",tahoma,verdana,arial,sans-serif;
	color: white;
	right:-45px;
	top: calc(8em - -60px);
	width:120px;
	height:30px;
	-ms-transform: rotate(270deg); /* IE 9 */
   	-webkit-transform: rotate(270deg); /* Safari */
    transform: rotate(270deg);
	display: block;
}





/*sankey*/
.node rect {
  cursor: context-menu;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}

.node text {
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}

.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .2;
}

/*.link:hover {
  stroke-opacity: .5;
}*/

#context-menu-action {
  position: absolute; 
  display: none;
  background: white;
  margin: 0;
  padding: 10px;
}

#context-menu-action .menu {
  width: 100px;
}

#context-menu-info{
  position: absolute; 
  display: none;
  background: white;
  margin: 0;
  padding: 10px;
  width: 300px;
}

#countdown-number {
  position: fixed; 
  z-index: 200;
  right: 20px;
  bottom: 100px;
  color: white;
  font-size: 200px;
  display: none;
}

/*.ui.segment {
  padding: 0;
}*/

#sankey-element-checkbox-list {
  position: fixed;
  z-index: 20;
  display: none;
}

#sankey-operations {
  position: fixed;
  z-index: 20;
  display: none;
}


#container {
    margin: auto;
    width: 900px;
}

/*for barchart*/
/*.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar2 {
  fill: orange;
}

.bar2:hover {
  fill: red ;
}

.bar {
  fill: #00CCFF;
}

.bar:hover {
  fill: #0099FF ;
}

.x.axis path {
  display: none;
}

.d3-tip {
  line-height: 1;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
  z-index: 102;
}
*/


.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

.x.axis path {
  display: none;
}


/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}

/*select by frame*/
.selection {
    stroke          : gray;
    stroke-width    : 2px;
    stroke-dasharray: 4px;
    stroke-opacity  : 1;
    fill            : transparent;
}

.state {
    stroke  : gray;
    fill    : white;
}


/*double borders*/
.borders {
  background: #f06d06;
  position: relative;
  border: 200px solid black;  
  margin: 20px;
}
.borders:after {
  content: '';
  position: absolute;
  top: -15px;
  left: -15px;
  right: -15px;
  bottom: -15px;
  background: red;
  z-index: -1;
}

#sankey-workbench {
  float: left;
  width: 300px;
  height: 100%;
  background: white;
  margin: 0;
  margin-left:14px;
  display: none;
}

/*sankey toolbar*/
.select-author, .select-theme, .select-document {
	margin-bottom: 1em;
}

.select-toolbar > :last-child { 
	margin-bottom: 0 !important;
}


/**
 * Tooltip Styles
 */

/* Add this attribute to the element that needs a tooltip */
[data-tooltip] {
  position: relative;
  z-index: 2;
  cursor: pointer;
}

/* Hide the tooltip content by default */
[data-tooltip]:before,
[data-tooltip]:after {
  visibility: hidden;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  pointer-events: none;
}

/* Position tooltip above the element */
[data-tooltip]:before {
  position: absolute;
  bottom: 150%;
  left: 50%;
  margin-bottom: 5px;
  margin-left: -80px;
  padding: 7px;
  width: 160px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #000;
  background-color: hsla(0, 0%, 20%, 0.9);
  color: #fff;
  content: attr(data-tooltip);
  text-align: center;
  font-size: 14px;
  line-height: 1.2;
}

/* Triangle hack to make tooltip look like a speech bubble */
[data-tooltip]:after {
  position: absolute;
  bottom: 150%;
  left: 50%;
  margin-left: -5px;
  width: 0;
  border-top: 5px solid #000;
  border-top: 5px solid hsla(0, 0%, 20%, 0.9);
  border-right: 5px solid transparent;
  border-left: 5px solid transparent;
  content: " ";
  font-size: 0;
  line-height: 0;
}

/* Show tooltip content on hover */
[data-tooltip]:hover:before,
[data-tooltip]:hover:after {
  visibility: visible;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
  filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1;
}

/*color*/
.blue-s {
	background-color: #C0E7F3;
}

.blue-m {
	background-color: #67C7E2;
}

.blue-l {
	background-color: #25A0C5;
}

/*http://www.immigration-usa.com/html_colors.html*/
.color-1 {
	background-color: #FFFF00
}
.color-2 {
	background-color: #FFCC00
}
.color-3 {
	background-color: #FF9900
}
.color-4 {
	background-color: #FF6600
}
.color-5 {
	background-color: #FF3300
}
.color-5 {
	background-color: #FF0000
}

.tk.my_nugget {
	background-color: rgb(0, 204, 255);
}
.tk.my_comment {
	background-color: rgba(0, 255, 255, 0.5);
}
.tk.other_nugget {
	background-color: rgb(0, 204, 0);
}
.tk.other_comment {
	background-color: rgba(0, 255, 0, 0.5);
}


svg {
  font: 10px sans-serif;
}

.area {
  fill: steelblue;
  clip-path: url(#clip);
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.brush .extent {
  stroke: #fff;
  fill-opacity: .125;
  shape-rendering: crispEdges;
}
